{
  "id": "RawKuma",
  "media_type": "manga",
  "search_url": "https://rawkuma.com/?s={title}",
  "search": "function search(html) { let data = []; const regex = new RegExp(`<div class=\"bs\"> (.*?)href=\"https://rawkuma.com/manga/(.*?)/\" title=\"(.*?)\"> (.*?)src=\"(.*?)\"`, 'gi'); let match; while ((match = regex.exec(html)) !== null) { let lib_item = {}; lib_item.id = match[2]; lib_item.title = match[3]; lib_item.img = match[5]; lib_item.plugin = 'MangaRaw'; lib_item.authors = ''; lib_item.artists = ''; lib_item.description = ''; lib_item.chapters = []; data.push(lib_item); } return data; }",
  "chapters_url": "https://rawkuma.com/manga/{id}",
  "get_chapters": "function getChapters(json, html) { const auth_regex = new RegExp(`<b>Author</b> <span> (.*?) </span>`, 'gi'); json.authors = auth_regex.exec(html)[1]; const art_regex = new RegExp(`<b>Artist</b> <span> (.*?) </span>`, 'gi'); json.artists = art_regex.exec(html)[1]; const desc_regex = new RegExp(`itemprop=\"description\"><p>(.*?)</p>`, 'gi'); let desc_match = desc_regex.exec(html); if (desc_match != null) { json.description = desc_match[1]; } else { const desc_regex2 = new RegExp(`<hr /> <p>(.*?)</p>`, 'gi'); json.description = desc_regex2.exec(html)[1]; } const regex = new RegExp(`<div class=\"eph-num\"> <a href=\"https://rawkuma.com/(.*?)/\"> <span class=\"chapternum\">(.*?)</span>`, 'gi'); let data = []; let match; while ((match = regex.exec(html)) !== null) { let lib_item = {}; lib_item.id = match[1]; lib_item.title = ''; lib_item.number = parseInt(match[2].match(new RegExp(`\\\\d+`))[0]); lib_item.page = 1; lib_item.completed = false; data.push(lib_item); } json.chapters = data; return json; }",
  "pages_url": "https://rawkuma.com/{id}",
  "get_pages": "function getChapterPages(html) { let data = []; const regex = new RegExp(`<img src='(.*?)'`, 'gi'); let match; while ((match = regex.exec(html)) !== null) { data.push(match[1]); } return data; }"
}